{"version":3,"file":"add_camera.min.js","sources":["../src/add_camera.js"],"sourcesContent":["/**\n * JavaScript class for Camera\n *\n * @subpackage quizproctoring\n * @copyright  2020 Mahendra Soni <ms@taketwotechnologies.com> {@link https://taketwotechnologies.com}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory'],\nfunction($, str, ModalFactory) {\n    var Camera = function(cmid, mainimage=false, attemptid=null) {\n        var docElement = $(document);\n        this.video = document.getElementById(this.videoid);\n        this.canvas = document.getElementById(this.canvasid);\n        this.cmid = cmid;\n        this.mainimage = mainimage;\n        this.attemptid = attemptid;\n        docElement.on('popup', this.showpopup.bind(this));\n        setTimeout(navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n            .then(function(stream) {\n                if (this.video) {\n                  this.video.srcObject = stream;\n                  this.video.play();\n                }\n            })\n        .catch(function() {\n            //console.log(err);\n        }), 10000);\n    };\n    /** @type Tag element contain video. */\n    Camera.prototype.video = false;\n    /** @type String video elemend id. */\n    Camera.prototype.videoid = 'video';\n    /** @type Tag element contain canvas. */\n    Camera.prototype.canvas = false;\n    /** @type String video elemend id. */\n    Camera.prototype.canvasid = 'canvas';\n    /** @type int width of canvas object. */\n    Camera.prototype.width = 320;\n    /** @type int width of canvas object. */\n    Camera.prototype.height = 240;\n    /** @type String element contain takepicture button. */\n    Camera.prototype.takepictureid = 'takepicture';\n    /** @type String element contain retake button. */\n    Camera.prototype.retakeid = 'retake';\n    /** @type int course module id. */\n    Camera.prototype.cmid = false;\n    /** @type bool whether a main image or compare against an image. */\n    Camera.prototype.mainimage = false;\n     /** @type int attempt id. */\n    Camera.prototype.attemptid = false;\n\n    Camera.prototype.takepicture = function() {\n        //console.log('takepicture function');\n        var context = this.canvas.getContext('2d');\n        context.drawImage(this.video, 0, 0, this.width, this.height);\n        var data = this.canvas.toDataURL('image/png');\n        $('#'+this.videoid).hide();\n        $('#'+this.takepictureid).hide();\n        $('#'+this.canvasid).show();\n        $('#'+this.retakeid).show();\n        $(\"input[name='userimg']\").val(data);\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\n        $.ajax({\n            url : M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\n            method : 'POST',\n            data : {imgBase64: data, cmid: this.cmid,attemptid: this.attemptid, mainimage: this.mainimage},\n            success : function(response) {\n                if (response && response.errorcode) {\n                    //console.log(response.errorcode);\n                    $(\"input[name='userimg']\").val('');\n                    $(document).trigger('popup', response.error);\n                } else {\n                    $(\"#id_submitbutton\").prop(\"disabled\", false);\n                }\n            }\n        });\n    };\n    Camera.prototype.proctoringimage = function() {\n        //console.log(this.cmid);\n        var context = this.canvas.getContext('2d');\n        context.drawImage(this.video, 0, 0, this.width, this.height);\n        var data = this.canvas.toDataURL('image/png');\n        $.ajax({\n            url : M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\n            method : 'POST',\n            data : {imgBase64: data, cmid: this.cmid, attemptid: this.attemptid,mainimage: this.mainimage},\n            success : function(response){\n                if (response && response.errorcode) {\n                   // console.log(response.errorcode);\n                    $(document).trigger('popup', response.error);\n                } else {\n                    if (response.redirect && response.url) {\n                        window.onbeforeunload = null;\n                        window.location.href = encodeURI(response.url);\n                    }\n                }\n            }\n        });\n    };\n\n    Camera.prototype.retake = function() {\n        $(\"input[name='userimg']\").val('');\n        $('#'+this.videoid).show(this.cmid);\n        $('#'+this.takepictureid).show();\n        $('#'+this.canvasid).hide();\n        $('#'+this.retakeid).hide();\n    };\n    Camera.prototype.showpopup = function(event, message) {\n        ModalFactory.create({\n            body: message,\n        }).then(function(modal) {\n            modal.show();\n        });\n    };\n    var init = function(cmid, mainimage, verifyduringattempt = false, attemptid=null,setinterval=300) {\n        if (verifyduringattempt) {\n            $('<canvas>').attr({id: 'canvas', width: '280', height: '240', 'style': 'display: none;'}).appendTo('body');\n            $('<video>').attr({\n                id:'video',\n                class:'quizaccess_quizproctoring-video',\n                width:'280',\n                height:'240',\n                autoplay:'autoplay'}).appendTo('body');\n            var camera = new Camera(cmid, mainimage, attemptid);\n            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\n        } else {\n            var camera = new Camera(cmid, mainimage, attemptid);\n            // Take picture on button click\n            $('#'+camera.takepictureid).on('click', function(e) {\n                e.preventDefault();\n                camera.takepicture();\n            });\n            // Show video again when retake\n            $('#'+camera.retakeid).on('click', function(e) {\n                e.preventDefault();\n                camera.retake();\n            });\n            $(\"#id_submitbutton\").on('click', function(e){\n                if ($(\"input[name='userimg']\").val() == \"\") {\n                    e.preventDefault();\n                    ModalFactory.create({\n                        body: str.get_string('clickpicture', 'quizaccess_quizproctoring'),\n                    }).then(function(modal) {\n                        modal.show();\n                    });\n                }\n            });\n        }\n    };\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","str","ModalFactory","Camera","cmid","mainimage","attemptid","docElement","document","video","getElementById","this","videoid","canvas","canvasid","on","showpopup","bind","setTimeout","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","prototype","width","height","takepictureid","retakeid","takepicture","getContext","drawImage","data","toDataURL","hide","show","val","prop","ajax","url","M","cfg","wwwroot","method","imgBase64","success","response","errorcode","trigger","error","proctoringimage","redirect","window","onbeforeunload","location","href","encodeURI","retake","event","message","create","body","modal","init","verifyduringattempt","setinterval","attr","id","appendTo","class","autoplay","camera","setInterval","e","preventDefault","get_string"],"mappings":"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"}